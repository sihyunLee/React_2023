{"version":3,"sources":["api/coins.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","res","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","Chart","useQuery","isLoading","data","type","series","map","x","time_open","y","open","toFixed","high","low","close","options","theme","mode","chart","height","width","background","xaxis","yaxis","tooltip","enabled","StyledTable","styled","div","textColor","StyledTableRow","StyledTh","bgColor","StyledTd","Price","price","substring","volume","reverse","Overview","props","OverviewItem","Description","p","Title","h1","Loader","span","Container","Header","header","Tabs","Tab","isActive","accentColor","BackListBtn","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","refetchInterval","tickersLoading","tickersData","Helmet","name","to","rank","symbol","quotes","USD","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","slice","coin","pathname","id","src","Router","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","Button","button","App","useState","themeMode","setThemeMode","onClick","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"8NAAMA,EAAW,iCAEJC,EAAa,WACxB,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAsBG,MAAK,SAACC,GAAD,OAASA,EAAIC,WAU/C,SAASC,EAAiBC,GAC/B,IAAMC,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,OAC5B,OAAON,MAAM,GAAD,OACPF,EADO,kBACWO,EADX,mCAC4CM,EAD5C,gBAC6DL,IACvEL,MAAK,SAACC,GAAD,OAASA,EAAIC,U,4BC0CPS,I,QAAAA,EAxCf,YAAwC,IAAvBP,EAAsB,EAAtBA,OACf,EAA4BQ,mBAC1B,CAAC,aAAcR,IACf,kBAAMD,EAAiBC,MAFjBS,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAKnB,OACE,8BACGD,EACC,mBAEA,cAAC,IAAD,CACEE,KAAK,cACLC,OACE,CACE,CACEF,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMG,KAAI,SAACH,GAAD,MAAW,CACzBI,EAAGJ,EAAKK,UACRC,EAAG,CACDN,EAAKO,KAAKC,QAAQ,GAClBR,EAAKS,KAAKD,QAAQ,GAClBR,EAAKU,IAAIF,QAAQ,GACjBR,EAAKW,MAAMH,QAAQ,UAM7BI,QAAS,CACPC,MAAO,CAAEC,KAAM,QACfC,MAAO,CAAEC,OAAQ,MAAOC,MAAO,MAAOC,WAAY,eAClDC,MAAO,CAAElB,KAAM,YACfmB,MAAO,CAAEC,QAAS,CAAEC,SAAS,UChDnCC,EAAcC,IAAOC,IAAV,oIAED,qBAAGZ,MAAkBa,aAM/BC,EAAiBH,IAAOC,IAAV,gDAIdG,EAAWJ,IAAOC,IAAV,2LAKH,qBAAGZ,MAAkBgB,WAM1BC,EAAWN,IAAOC,IAAV,4IAEH,qBAAGZ,MAAkBgB,WAsEjBE,I,oBAAAA,EAhDf,YAAwC,IAAvBzC,EAAsB,EAAtBA,OACf,EAA4BQ,mBAC1B,CAAC,aAAcR,IACf,kBAAMD,EAAiBC,MAFjBS,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAKnB,OACE,8BACGD,EACC,mBAEA,mCACE,eAACwB,EAAD,WACE,eAACI,EAAD,WACE,cAACC,EAAD,mBADF,OAEG5B,QAFH,IAEGA,OAFH,EAEGA,EACGG,KAAI,SAAC6B,GAAD,OACJ,cAACF,EAAD,UACGE,EAAM3B,UAAU4B,UAAU,EAAG,KADjBD,EAAME,WAItBC,aAEL,eAACR,EAAD,WACE,cAACC,EAAD,oBADF,OAEG5B,QAFH,IAEGA,OAFH,EAEGA,EACGG,KAAI,SAAC6B,GAAD,OACJ,cAACF,EAAD,UAA8BE,EAAMtB,IAAIF,QAAQ,IAAjCwB,EAAME,WAEtBC,aAEL,eAACR,EAAD,WACE,cAACC,EAAD,oBADF,OAEG5B,QAFH,IAEGA,OAFH,EAEGA,EACGG,KAAI,SAAC6B,GAAD,OACJ,cAACF,EAAD,UACGE,EAAMvB,KAAKD,QAAQ,IADPwB,EAAME,WAItBC,qBC3EXC,EAAWZ,IAAOC,IAAV,0JAGQ,SAACY,GAAD,OAAWA,EAAMxB,MAAMa,aAIvCY,EAAed,IAAOC,IAAV,iPAIP,SAACY,GAAD,OAAWA,EAAMxB,MAAMgB,WAQ5BU,EAAcf,IAAOgB,EAAV,iDAIXC,EAAQjB,IAAOkB,GAAV,+DAEA,SAACL,GAAD,OAAWA,EAAMxB,MAAMa,aAG5BiB,EAASnB,IAAOoB,KAAV,sEAKNC,EAAYrB,IAAOC,IAAV,0FAMTqB,EAAStB,IAAOuB,OAAV,mHAONC,EAAOxB,IAAOC,IAAV,iIAUJwB,EAAMzB,IAAOoB,KAAV,iQASa,SAACP,GAAD,OAAWA,EAAMxB,MAAMa,aAMlC,SAACW,GAAD,OACPA,EAAMa,SAAWb,EAAMxB,MAAMsC,YAAcd,EAAMxB,MAAMgB,WAMrDuB,EAAc5B,IAAOC,IAAV,wPAOK,SAACY,GAAD,OAAWA,EAAMxB,MAAMa,aAGlC,SAACW,GAAD,OAAWA,EAAMxB,MAAMgB,WA2KnBwB,I,iBAAAA,GA3Gf,WACE,IAAQ/D,EAAWgE,cAAXhE,OACAiE,EAAUC,cAAVD,MACFE,EAAaC,YAAc,kBAC3BC,EAAaD,YAAc,kBACjC,EAAmD5D,mBACjD,CAAC,OAAQR,IACT,kBHzKG,SAAuBA,GAC5B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,IAAUJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UGwKtDwE,CAActE,MAFHuE,EAAnB,EAAQ9D,UAA8B+D,EAAtC,EAAgC9D,KAIhC,EACEF,mBACE,CAAC,UAAWR,IACZ,kBH1KC,SAA0BA,GAC/B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,oBAAwBO,IAAUJ,MAAK,SAACC,GAAD,OAASA,EAAIC,UGyKtD2E,CAAiBzE,KACvB,CAAE0E,gBAAiB,MAJJC,EAAnB,EAAQlE,UAAiCmE,EAAzC,EAAmClE,KAwBnC,OACE,eAAC6C,EAAD,WACE,cAACsB,EAAA,EAAD,UACE,gCACQ,OAALZ,QAAK,IAALA,KAAOa,KACJb,EAAMa,KACNP,EACA,aADW,OAEXC,QAFW,IAEXA,OAFW,EAEXA,EAAUM,SAGlB,cAACtB,EAAD,UACE,cAACL,EAAD,UACQ,OAALc,QAAK,IAALA,KAAOa,KACJb,EAAMa,KACNP,EACA,aADW,OAEXC,QAFW,IAEXA,OAFW,EAEXA,EAAUM,SAGlB,cAAC,IAAD,CAAMC,GAAE,IAAR,SACE,cAACjB,EAAD,qBAEDa,EACC,cAACtB,EAAD,yBAEA,qCACE,eAACP,EAAD,WACE,eAACE,EAAD,WACE,yCACA,sCAAOwB,QAAP,IAAOA,OAAP,EAAOA,EAAUQ,UAEnB,eAAChC,EAAD,WACE,2CACA,4CAAQwB,QAAR,IAAQA,OAAR,EAAQA,EAAUS,aAEpB,eAACjC,EAAD,WACE,0CACA,sCAAO4B,QAAP,IAAOA,OAAP,EAAOA,EAAaM,OAAOC,IAAIzC,MAAMxB,QAAQ,WAGjD,cAAC+B,EAAD,iBAAcuB,QAAd,IAAcA,OAAd,EAAcA,EAAUY,cACxB,eAACtC,EAAD,WACE,eAACE,EAAD,WACE,gDACA,sCAAO4B,QAAP,IAAOA,OAAP,EAAOA,EAAaS,kBAEtB,eAACrC,EAAD,WACE,+CACA,sCAAO4B,QAAP,IAAOA,OAAP,EAAOA,EAAaU,mBAGxB,eAAC5B,EAAD,WACE,cAACC,EAAD,CAAKC,SAAyB,OAAfO,EAAf,SACE,cAAC,IAAD,CAAMY,GAAE,WAAM/E,EAAN,UAAR,qBAEF,cAAC2D,EAAD,CAAKC,SAAyB,OAAfS,EAAf,SACE,cAAC,IAAD,CAAMU,GAAE,WAAM/E,EAAN,UAAR,wBAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuF,KAAI,iBAAX,SACE,cAAC,EAAD,CAAOvF,OAAQA,MAEjB,cAAC,IAAD,CAAOuF,KAAI,iBAAX,SACE,cAAC,EAAD,CAAOvF,OAAQA,gBCnQvBuD,GAAYrB,IAAOC,IAAV,0FAMTqB,GAAStB,IAAOuB,OAAV,mHAONN,GAAQjB,IAAOkB,GAAV,gDAILoC,GAAYtD,IAAOuD,GAAV,0BAET1B,GAAO7B,IAAOwD,GAAV,sQACY,SAAC3C,GAAD,OAAWA,EAAMxB,MAAMa,aAClC,SAACW,GAAD,OAAWA,EAAMxB,MAAMgB,WAUnB,SAACQ,GAAD,OAAWA,EAAMxB,MAAMsC,eAKhCR,GAASnB,IAAOoB,KAAV,wEAKNqC,GAAMzD,IAAO0D,IAAV,+DAgEMC,OAjDf,WACE,MAA4BrF,mBAAkB,WAAYd,GAAlDe,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAWnB,OACE,mCACE,eAAC,GAAD,WACE,cAACmE,EAAA,EAAD,UACE,6CAEF,cAAC,GAAD,UACE,cAAC,GAAD,4BAEDpE,EACC,cAAC,GAAD,yBAEA,cAAC+E,GAAD,iBACG9E,QADH,IACGA,OADH,EACGA,EAAMoF,MAAM,EAAG,KAAKjF,KAAI,SAACkF,GAAD,OACvB,cAAC,GAAD,UACE,eAAC,IAAD,CACEhB,GAAI,CACFiB,SAAS,IAAD,OAAMD,EAAKE,IACnBhC,MAAO,CAAEa,KAAMiB,EAAKjB,OAHxB,UAME,cAACa,GAAD,CACEO,IAAG,yEACwCH,EAAKE,GAD7C,gCAIJF,EAAKjB,KAXR,cADSiB,EAAKE,eCrEfE,I,MAAAA,GAff,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOZ,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,Y,SCVGa,GAA0B,CACrC7D,QAAS,UACTH,UAAW,UACXyB,YAAa,WAGFwC,GAAa,CACxB9D,QAAS,UACTH,UAAW,UACXyB,YAAa,WCLTyC,GAAcC,YAAH,i8CAsDI,SAACxD,GAAD,OAAWA,EAAMxB,MAAMgB,WAClC,SAACQ,GAAD,OAAWA,EAAMxB,MAAMa,aAO3BoE,GAAStE,IAAOuE,OAAV,wRAIU,SAAC1D,GAAD,OAAWA,EAAMxB,MAAMa,aAClC,SAACW,GAAD,OAAWA,EAAMxB,MAAMgB,WA6BnBmE,OApBf,WACE,MAAkCC,mBAAS,QAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMtF,EAAsB,SAAdqF,EAAuBR,GAAYC,GAIjD,OACE,mCACE,eAAC,IAAD,CAAe9E,MAAOA,EAAtB,UACE,cAAC+E,GAAD,IACA,cAACE,GAAD,CAAQM,QAPM,kBAClBD,EAA2B,SAAdD,EAAuB,QAAU,SAM1C,SACE,+BAAOA,MAET,cAAC,GAAD,IACA,cAAC,sBAAD,UC3FFG,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,GAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.7059d1f0.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1\";\n\nexport const fetchCoins = () => {\n  return fetch(`${BASE_URL}/coins`).then((res) => res.json());\n};\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((res) => res.json());\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((res) => res.json());\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((res) => res.json());\n}\n","import ApexChart from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api/coins\";\nimport Price from \"./Price\";\n\ninterface ChartProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"chartOhlcv\", coinId],\n    () => fetchCoinHistory(coinId)\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={\n            [\n              {\n                data: data?.map((data) => ({\n                  x: data.time_open,\n                  y: [\n                    data.open.toFixed(2),\n                    data.high.toFixed(2),\n                    data.low.toFixed(2),\n                    data.close.toFixed(2),\n                  ],\n                })),\n              },\n            ] as unknown as number[]\n          }\n          options={{\n            theme: { mode: \"dark\" },\n            chart: { height: \"300\", width: \"500\", background: \"transparent\" },\n            xaxis: { type: \"datetime\" },\n            yaxis: { tooltip: { enabled: true } },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinHistory } from \"../api/coins\";\n\nconst StyledTable = styled.div`\n  padding: 1rem;\n  background: ${({ theme }) => theme.textColor};\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StyledTableRow = styled.div`\n  flex-wrap: wrap;\n`;\n\nconst StyledTh = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 0 0 10rem;\n  width: 10rem;\n  color: ${({ theme }) => theme.bgColor};\n  padding: 1rem;\n  word-break: keep-all;\n  font-weight: bold;\n`;\n\nconst StyledTd = styled.div`\n  display: flex;\n  color: ${({ theme }) => theme.bgColor};\n  align-items: center;\n  padding: 1rem;\n  flex: 1;\n  word-break: keep-all;\n`;\n\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"priceOhlcv\", coinId],\n    () => fetchCoinHistory(coinId)\n  );\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Price Loading...\"\n      ) : (\n        <>\n          <StyledTable>\n            <StyledTableRow>\n              <StyledTh>Date</StyledTh>\n              {data\n                ?.map((price) => (\n                  <StyledTd key={price.volume}>\n                    {price.time_open.substring(0, 10)}\n                  </StyledTd>\n                ))\n                .reverse()}\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTh>Lower</StyledTh>\n              {data\n                ?.map((price) => (\n                  <StyledTd key={price.volume}>{price.low.toFixed(2)}</StyledTd>\n                ))\n                .reverse()}\n            </StyledTableRow>\n            <StyledTableRow>\n              <StyledTh>Upper</StyledTh>\n              {data\n                ?.map((price) => (\n                  <StyledTd key={price.volume}>\n                    {price.high.toFixed(2)}\n                  </StyledTd>\n                ))\n                .reverse()}\n            </StyledTableRow>\n          </StyledTable>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  useLocation,\n  useParams,\n  Switch,\n  Route,\n  useRouteMatch,\n} from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api/coins\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.textColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: ${(props) => props.theme.bgColor};\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.textColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n\n  grid-template-columns: repeat(2, 1fr);\n\n  margin: 25px 0px;\n\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n\n  text-transform: uppercase;\n\n  font-size: 12px;\n\n  font-weight: 400;\n\n  background-color: ${(props) => props.theme.textColor};\n\n  padding: 7px 0px;\n\n  border-radius: 10px;\n\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.bgColor};\n\n  a {\n    display: block;\n  }\n`;\nconst BackListBtn = styled.div`\n  width: 50px;\n  margin-bottom: 20px;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.textColor};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.bgColor};\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface IInfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface ITickersData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } =\n    useQuery<ITickersData>(\n      [\"tickers\", coinId],\n      () => fetchCoinTickers(coinId),\n      { refetchInterval: 10000 }\n    );\n\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const infoData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name\n            ? state.name\n            : infoLoading\n            ? \"Loading...\"\n            : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name\n            ? state.name\n            : infoLoading\n            ? \"Loading...\"\n            : infoData?.name}\n        </Title>\n      </Header>\n      <Link to={`/`}>\n        <BackListBtn>Back</BackListBtn>\n      </Link>\n      {tickersLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>PRICE:</span>\n              <span>{tickersData?.quotes.USD.price.toFixed(2)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api/coins\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 50px;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    display: block;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"CoinList\", fetchCoins);\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  return (\n    <>\n      <Container>\n        <Helmet>\n          <title>Coins </title>\n        </Helmet>\n        <Header>\n          <Title>Sihyun-Coin</Title>\n        </Header>\n        {isLoading ? (\n          <Loader>Loading...</Loader>\n        ) : (\n          <CoinsList>\n            {data?.slice(0, 100).map((coin) => (\n              <Coin key={coin.id}>\n                <Link\n                  to={{\n                    pathname: `/${coin.id}`,\n                    state: { name: coin.name },\n                  }}\n                >\n                  <Img\n                    src={`\n                    https://cryptocurrencyliveprices.com/img/${coin.id}.png\n                    `}\n                  />\n                  {coin.name} &rarr;\n                </Link>\n              </Coin>\n            ))}\n          </CoinsList>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default Coins;\n","import { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\nexport const lightTheme = {\n  bgColor: \"#f5f6fa\",\n  textColor: \"#2f3640\",\n  accentColor: \"#9c88ff\",\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { useState } from \"react\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\nconst Button = styled.button`\n  width: 3.5rem;\n  height: 3.5rem;\n  border: none;\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.bgColor}; // 테마 변경 컬러 지정\n  border-radius: 15px;\n  margin: 1rem;\n  cursor: pointer;\n\n  span {\n    font-size: 1rem;\n  }\n`;\nfunction App() {\n  const [themeMode, setThemeMode] = useState(\"Dark\");\n  const theme = themeMode === \"Dark\" ? darkTheme : lightTheme;\n  const toggleTheme = () =>\n    setThemeMode(themeMode === \"Dark\" ? \"Light\" : \"Dark\");\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Button onClick={toggleTheme}>\n          <span>{themeMode}</span>\n        </Button>\n        <Router />\n        <ReactQueryDevtools />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}